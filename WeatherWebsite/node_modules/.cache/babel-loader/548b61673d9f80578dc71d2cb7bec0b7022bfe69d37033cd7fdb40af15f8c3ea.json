{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER001\\\\myRepo\\\\WeatherWebsite\\\\src\\\\components\\\\city.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\n\n// import React, { useState, useEffect } from 'react';\n// import CityCard from './CityCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction City() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const appid = '8ee633956bad6ae1965b557a94ecfcba';\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  // פונקציה לטעינת נתונים מ-API\n  const fetchWeatherData = async () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`).then(response => response.json()).then(data => {\n      const cityName = data.name;\n      const description = data.weather[0].description;\n      const icon = data.weather[0].icon;\n      const temp = data.main.temp;\n      const feelsLike = data.main.feels_like;\n      const humidity = data.main.humidity;\n\n      // הצג את הנתונים ב-HTML\n      document.getElementById('city-name').textContent = cityName;\n      document.getElementById('description').textContent = description;\n      document.getElementById('temp').textContent = temp;\n      document.getElementById('feels-like').textContent = feelsLike;\n      document.getElementById('humidity').textContent = humidity;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n//     const navigate = useNavigate();\n//     const location = useLocation();\n\n//     const [client, setClient] = useState([]);\n\n//     useEffect(() => {\n//         setClient(location.state);\n//     }, []);\n\n//     const update = (client) => {\n//         console.log(client);\n//         navigate('update', { state: client });\n//     };\n\n//     const remove = async (clientId) => {\n//         console.log(clientId);\n//         // const data = \n//         await fetch('http://localhost:3090/clients/remove', {\n//             method: 'DELETE',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ client: clientId })\n//         });\n//         navigate(-1);\n//     };\n\n//     return (\n//         <div>\n//             <h3>{client.firstName} {client.lastName}</h3>\n//             <p>id: {client.clientId}</p>\n//             <p>Address: {client.address}</p>\n//             <p>Date Of Birth: {client.dateOfBirth}</p>\n//             <p>Telephone: {client.telphone}</p>\n//             <p>Phone: {client.phone}</p>\n//             <p>Vaccins Date: {client.vaccinsDate}</p>\n//             <p>Vaccins Producer: {client.vaccineManufacturer}</p>\n//             <p>Positive Result: {client.positiveResult}</p>\n//             <p>Recovery Date: {client.recoveryDate}</p>\n\n//             <button onClick={() => { update(client) }}>update</button>\n//             <button onClick={() => { remove(client.id) }}>remove</button>\n//         </div>\n//     )\n_s(City, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Outlet","jsxDEV","_jsxDEV","City","_s","cities","setCities","appid","fetchWeatherData","fetch","then","response","json","data","cityName","name","description","weather","icon","temp","main","feelsLike","feels_like","humidity","document","getElementById","textContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER001/myRepo/WeatherWebsite/src/components/city.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\r\n\r\n    // import React, { useState, useEffect } from 'react';\r\n    // import CityCard from './CityCard';\r\n\r\nfunction City() {\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const appid = '8ee633956bad6ae1965b557a94ecfcba';\r\n\r\n    useEffect(() => {\r\n        fetchWeatherData();\r\n    }, []);\r\n\r\n    // פונקציה לטעינת נתונים מ-API\r\n    const fetchWeatherData = async () => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const cityName = data.name;\r\n                const description = data.weather[0].description;\r\n                const icon = data.weather[0].icon;\r\n                const temp = data.main.temp;\r\n                const feelsLike = data.main.feels_like;\r\n                const humidity = data.main.humidity;\r\n\r\n                // הצג את הנתונים ב-HTML\r\n                document.getElementById('city-name').textContent = cityName;\r\n                document.getElementById('description').textContent = description;\r\n                document.getElementById('temp').textContent = temp;\r\n                document.getElementById('feels-like').textContent = feelsLike;\r\n                document.getElementById('humidity').textContent = humidity;\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* {cities.map(city => (\r\n            // <CityCard key={city.id} {...city} />\r\n          ))} */}\r\n        </div>\r\n    );\r\n}\r\n\r\n//     const navigate = useNavigate();\r\n//     const location = useLocation();\r\n\r\n//     const [client, setClient] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         setClient(location.state);\r\n//     }, []);\r\n\r\n//     const update = (client) => {\r\n//         console.log(client);\r\n//         navigate('update', { state: client });\r\n//     };\r\n\r\n//     const remove = async (clientId) => {\r\n//         console.log(clientId);\r\n//         // const data = \r\n//         await fetch('http://localhost:3090/clients/remove', {\r\n//             method: 'DELETE',\r\n//             headers: {\r\n//                 'Accept': 'application/json',\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ client: clientId })\r\n//         });\r\n//         navigate(-1);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h3>{client.firstName} {client.lastName}</h3>\r\n//             <p>id: {client.clientId}</p>\r\n//             <p>Address: {client.address}</p>\r\n//             <p>Date Of Birth: {client.dateOfBirth}</p>\r\n//             <p>Telephone: {client.telphone}</p>\r\n//             <p>Phone: {client.phone}</p>\r\n//             <p>Vaccins Date: {client.vaccinsDate}</p>\r\n//             <p>Vaccins Producer: {client.vaccineManufacturer}</p>\r\n//             <p>Positive Result: {client.positiveResult}</p>\r\n//             <p>Recovery Date: {client.recoveryDate}</p>\r\n\r\n//             <button onClick={() => { update(client) }}>update</button>\r\n//             <button onClick={() => { remove(client.id) }}>remove</button>\r\n//         </div>\r\n//     )\r\n\r\nexport default City;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;;AAErE;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEJ,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMY,KAAK,GAAG,kCAAkC;EAEhDX,SAAS,CAAC,MAAM;IACZY,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjCC,KAAK,CAAE,sEAAqEF,KAAM,eAAc,CAAC,CAC5FG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAI;MAC1B,MAAMC,WAAW,GAAGH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACD,WAAW;MAC/C,MAAME,IAAI,GAAGL,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;MACjC,MAAMC,IAAI,GAAGN,IAAI,CAACO,IAAI,CAACD,IAAI;MAC3B,MAAME,SAAS,GAAGR,IAAI,CAACO,IAAI,CAACE,UAAU;MACtC,MAAMC,QAAQ,GAAGV,IAAI,CAACO,IAAI,CAACG,QAAQ;;MAEnC;MACAC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,WAAW,GAAGZ,QAAQ;MAC3DU,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,WAAW,GAAGV,WAAW;MAChEQ,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,WAAW,GAAGP,IAAI;MAClDK,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,WAAW,GAAGL,SAAS;MAC7DG,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,WAAW,GAAGH,QAAQ;IAC9D,CAAC,CAAC;EACV,CAAC;EAED,oBACIrB,OAAA;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIK,CAAC;AAEd;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA1B,EAAA,CAnFSD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAqFb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}