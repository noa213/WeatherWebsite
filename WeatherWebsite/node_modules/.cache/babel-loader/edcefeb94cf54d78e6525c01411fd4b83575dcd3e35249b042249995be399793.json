{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER001\\\\myRepo\\\\WeatherWebsite\\\\src\\\\components\\\\city.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\n\n// import React, { useState, useEffect } from 'react';\n// import CityCard from './CityCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction City() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const appid = '8ee633956bad6ae1965b557a94ecfcba';\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  // פונקציה לטעינת נתונים מ-API\n  const fetchWeatherData = async () => {\n    // fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         const cityName = data.name;\n    //         const description = data.weather[0].description;\n    //         const icon = data.weather[0].icon;\n    //         const temp = data.main.temp;\n    //         const feelsLike = data.main.feels_like;\n    //         const humidity = data.main.humidity;\n    //     console.log(temp);\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`);\n    const data = await response.json();\n    console.log(data);\n    const cityName = data.name;\n    const description = data.weather[0].description;\n    const icon = data.weather[0].icon;\n    const temp = data.main.temp;\n    const feelsLike = data.main.feels_like;\n    const humidity = data.main.humidity;\n    // setCities([...citiess]);\n    const aaa = {\n      cityName: cityName,\n      description: description,\n      icon: icon,\n      temp: temp,\n      feelsLike: feelsLike,\n      humidity: humidity\n    };\n    // setCities([citiess])\n\n    // // הצג את הנתונים ב-HTML\n    // document.getElementById('city-name').textContent = cityName;\n    // document.getElementById('description').textContent = description;\n    // document.getElementById('temp').textContent = temp;\n    // document.getElementById('feels-like').textContent = feelsLike;\n    // document.getElementById('humidity').textContent = humidity;\n    // });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"rrtrbrg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [\" \", cities.map(city => {\n        return (\n          /*#__PURE__*/\n          // onClick={()=>{clientDetails(city)}}\n          _jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [city.id, \" \", city.cityName, \" \", city.icon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, city.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        );\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n//     const navigate = useNavigate();\n//     const location = useLocation();\n\n//     const [client, setClient] = useState([]);\n\n//     useEffect(() => {\n//         setClient(location.state);\n//     }, []);\n\n//     const update = (client) => {\n//         console.log(client);\n//         navigate('update', { state: client });\n//     };\n\n//     const remove = async (clientId) => {\n//         console.log(clientId);\n//         // const data = \n//         await fetch('http://localhost:3090/clients/remove', {\n//             method: 'DELETE',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ client: clientId })\n//         });\n//         navigate(-1);\n//     };\n\n//     return (\n//         <div>\n//             <h3>{client.firstName} {client.lastName}</h3>\n//             <p>id: {client.clientId}</p>\n//             <p>Address: {client.address}</p>\n//             <p>Date Of Birth: {client.dateOfBirth}</p>\n//             <p>Telephone: {client.telphone}</p>\n//             <p>Phone: {client.phone}</p>\n//             <p>Vaccins Date: {client.vaccinsDate}</p>\n//             <p>Vaccins Producer: {client.vaccineManufacturer}</p>\n//             <p>Positive Result: {client.positiveResult}</p>\n//             <p>Recovery Date: {client.recoveryDate}</p>\n\n//             <button onClick={() => { update(client) }}>update</button>\n//             <button onClick={() => { remove(client.id) }}>remove</button>\n//         </div>\n//     )\n_s(City, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Outlet","jsxDEV","_jsxDEV","City","_s","cities","setCities","appid","fetchWeatherData","response","fetch","data","json","console","log","cityName","name","description","weather","icon","temp","main","feelsLike","feels_like","humidity","aaa","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","city","id","_c","$RefreshReg$"],"sources":["C:/Users/USER001/myRepo/WeatherWebsite/src/components/city.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import CityCard from './CityCard';\r\n\r\nfunction City() {\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const appid = '8ee633956bad6ae1965b557a94ecfcba';\r\n\r\n    useEffect(() => {\r\n        fetchWeatherData();\r\n    }, []);\r\n\r\n    // פונקציה לטעינת נתונים מ-API\r\n    const fetchWeatherData = async () => {\r\n        // fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`)\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         const cityName = data.name;\r\n        //         const description = data.weather[0].description;\r\n        //         const icon = data.weather[0].icon;\r\n        //         const temp = data.main.temp;\r\n        //         const feelsLike = data.main.feels_like;\r\n        //         const humidity = data.main.humidity;\r\n        //     console.log(temp);\r\n\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        const cityName = data.name;\r\n        const description = data.weather[0].description;\r\n        const icon = data.weather[0].icon;\r\n        const temp = data.main.temp;\r\n        const feelsLike = data.main.feels_like;\r\n        const humidity = data.main.humidity;\r\n        // setCities([...citiess]);\r\n        const aaa= ({cityName: cityName, description: description, icon: icon, temp: temp, feelsLike: feelsLike, humidity: humidity})\r\n        // setCities([citiess])\r\n\r\n        // // הצג את הנתונים ב-HTML\r\n        // document.getElementById('city-name').textContent = cityName;\r\n        // document.getElementById('description').textContent = description;\r\n        // document.getElementById('temp').textContent = temp;\r\n        // document.getElementById('feels-like').textContent = feelsLike;\r\n        // document.getElementById('humidity').textContent = humidity;\r\n        // });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p>rrtrbrg</p>\r\n            <div className='grid'> {cities.map(city => {\r\n                return (\r\n                    // onClick={()=>{clientDetails(city)}}\r\n                    <div className='container' key={city.id} >\r\n                        <p>{city.id} {city.cityName} {city.icon}</p>\r\n                    </div>\r\n                );\r\n            })}</div>\r\n\r\n            {/* {cities.map(city => (\r\n            // <CityCard key={city.id} {...city} />\r\n          ))} */}\r\n        </div>\r\n    );\r\n}\r\n\r\n//     const navigate = useNavigate();\r\n//     const location = useLocation();\r\n\r\n//     const [client, setClient] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         setClient(location.state);\r\n//     }, []);\r\n\r\n//     const update = (client) => {\r\n//         console.log(client);\r\n//         navigate('update', { state: client });\r\n//     };\r\n\r\n//     const remove = async (clientId) => {\r\n//         console.log(clientId);\r\n//         // const data = \r\n//         await fetch('http://localhost:3090/clients/remove', {\r\n//             method: 'DELETE',\r\n//             headers: {\r\n//                 'Accept': 'application/json',\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ client: clientId })\r\n//         });\r\n//         navigate(-1);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h3>{client.firstName} {client.lastName}</h3>\r\n//             <p>id: {client.clientId}</p>\r\n//             <p>Address: {client.address}</p>\r\n//             <p>Date Of Birth: {client.dateOfBirth}</p>\r\n//             <p>Telephone: {client.telphone}</p>\r\n//             <p>Phone: {client.phone}</p>\r\n//             <p>Vaccins Date: {client.vaccinsDate}</p>\r\n//             <p>Vaccins Producer: {client.vaccineManufacturer}</p>\r\n//             <p>Positive Result: {client.positiveResult}</p>\r\n//             <p>Recovery Date: {client.recoveryDate}</p>\r\n\r\n//             <button onClick={() => { update(client) }}>update</button>\r\n//             <button onClick={() => { remove(client.id) }}>remove</button>\r\n//         </div>\r\n//     )\r\n\r\nexport default City;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}