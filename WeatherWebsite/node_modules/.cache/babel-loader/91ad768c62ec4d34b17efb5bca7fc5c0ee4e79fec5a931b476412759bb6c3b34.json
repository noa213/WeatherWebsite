{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER001\\\\myRepo\\\\WeatherWebsite\\\\src\\\\components\\\\city.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\n\n// import React, { useState, useEffect } from 'react';\n// import CityCard from './CityCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction City() {\n  _s();\n  const cities = [{\n    city: 'תל אביב',\n    lat: 32.0853,\n    lon: 34.7818\n  }, {\n    city: 'ירושלים',\n    lat: 31.7683,\n    lon: 35.2137\n  }];\n  // const [cities, setCities] = useState([]);\n  const appid = '8ee633956bad6ae1965b557a94ecfcba';\n  useEffect(() => {\n    getWeatherData();\n  }, []);\n\n  // פונקציה לטעינת נתונים מ-API\n  const getWeatherData = async () => {\n    // fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         const cityName = data.name;\n    //         const description = data.weather[0].description;\n    //         const icon = data.weather[0].icon;\n    //         const temp = data.main.temp;\n    //         const feelsLike = data.main.feels_like;\n    //         const humidity = data.main.humidity;\n    //     console.log(temp);\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`);\n    const data = await response.json();\n    console.log(data);\n    const cityName = data.name;\n    const description = data.weather[0].description;\n    const icon = data.weather[0].icon;\n    const temp = data.main.temp;\n    const feelsLike = data.main.feels_like;\n    const humidity = data.main.humidity;\n    // setCities([...citiess]);\n    const weatherData = {\n      cityName: cityName,\n      description: description,\n      icon: icon,\n      temp: temp,\n      feelsLike: feelsLike,\n      humidity: humidity\n    };\n    setCities([weatherData]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"rrtrbrg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [\" \", cities.map(city => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [city.id, \" \", city.cityName, \" \", city.icon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, city.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(City, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Outlet","jsxDEV","_jsxDEV","City","_s","cities","city","lat","lon","appid","getWeatherData","response","fetch","data","json","console","log","cityName","name","description","weather","icon","temp","main","feelsLike","feels_like","humidity","weatherData","setCities","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","_c","$RefreshReg$"],"sources":["C:/Users/USER001/myRepo/WeatherWebsite/src/components/city.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import CityCard from './CityCard';\r\n\r\nfunction City() {\r\n    const cities = [\r\n        { city: 'תל אביב', lat: 32.0853, lon: 34.7818 },\r\n        { city: 'ירושלים', lat: 31.7683, lon: 35.2137 },\r\n    ]\r\n    // const [cities, setCities] = useState([]);\r\n    const appid = '8ee633956bad6ae1965b557a94ecfcba';\r\n\r\n    useEffect(() => {\r\n        getWeatherData();\r\n    }, []);\r\n\r\n    // פונקציה לטעינת נתונים מ-API\r\n    const getWeatherData = async () => {\r\n        // fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`)\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         const cityName = data.name;\r\n        //         const description = data.weather[0].description;\r\n        //         const icon = data.weather[0].icon;\r\n        //         const temp = data.main.temp;\r\n        //         const feelsLike = data.main.feels_like;\r\n        //         const humidity = data.main.humidity;\r\n        //     console.log(temp);\r\n\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Tel%20Aviv&appid=${appid}&units=metric`);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        const cityName = data.name;\r\n        const description = data.weather[0].description;\r\n        const icon = data.weather[0].icon;\r\n        const temp = data.main.temp;\r\n        const feelsLike = data.main.feels_like;\r\n        const humidity = data.main.humidity;\r\n        // setCities([...citiess]);\r\n        const weatherData= ({cityName: cityName, description: description, icon: icon, temp: temp, feelsLike: feelsLike, humidity: humidity});\r\n        setCities([weatherData])\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p>rrtrbrg</p>\r\n            <div className='grid'> {cities.map(city => {\r\n                return (\r\n                    <div className='container' key={city.id} >\r\n                        <p>{city.id} {city.cityName} {city.icon}</p>\r\n                    </div>\r\n                );\r\n            })}</div>\r\n\r\n            {/* {cities.map(city => (\r\n            // <CityCard key={city.id} {...city} />\r\n          ))} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default City;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;;AAEzE;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,MAAM,GAAG,CACX;IAAEC,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC/C;IAAEF,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAClD;EACD;EACA,MAAMC,KAAK,GAAG,kCAAkC;EAEhDb,SAAS,CAAC,MAAM;IACZc,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sEAAqEH,KAAM,eAAc,CAAC;IACxH,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,MAAMI,QAAQ,GAAGJ,IAAI,CAACK,IAAI;IAC1B,MAAMC,WAAW,GAAGN,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACD,WAAW;IAC/C,MAAME,IAAI,GAAGR,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;IACjC,MAAMC,IAAI,GAAGT,IAAI,CAACU,IAAI,CAACD,IAAI;IAC3B,MAAME,SAAS,GAAGX,IAAI,CAACU,IAAI,CAACE,UAAU;IACtC,MAAMC,QAAQ,GAAGb,IAAI,CAACU,IAAI,CAACG,QAAQ;IACnC;IACA,MAAMC,WAAW,GAAG;MAACV,QAAQ,EAAEA,QAAQ;MAAEE,WAAW,EAAEA,WAAW;MAAEE,IAAI,EAAEA,IAAI;MAAEC,IAAI,EAAEA,IAAI;MAAEE,SAAS,EAAEA,SAAS;MAAEE,QAAQ,EAAEA;IAAQ,CAAE;IACrIE,SAAS,CAAC,CAACD,WAAW,CAAC,CAAC;EAC5B,CAAC;EAED,oBACIzB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACd/B,OAAA;MAAKgC,SAAS,EAAC,MAAM;MAAAL,QAAA,GAAC,GAAC,EAACxB,MAAM,CAAC8B,GAAG,CAAC7B,IAAI,IAAI;QACvC,oBACIJ,OAAA;UAAKgC,SAAS,EAAC,WAAW;UAAAL,QAAA,eACtB3B,OAAA;YAAA2B,QAAA,GAAIvB,IAAI,CAAC8B,EAAE,EAAC,GAAC,EAAC9B,IAAI,CAACW,QAAQ,EAAC,GAAC,EAACX,IAAI,CAACe,IAAI;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADhB3B,IAAI,CAAC8B,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElC,CAAC;MAEd,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKR,CAAC;AAEd;AAAC7B,EAAA,CAvDQD,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAyDb,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}