{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER001\\\\myRepo\\\\WeatherWebsite\\\\src\\\\components\\\\city.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction City() {\n  _s();\n  // import React, { useState, useEffect } from 'react';\n  // import CityCard from './CityCard';\n\n  const [cities, setCities] = useState([]);\n  const appid = '8ee633956bad6ae1965b557a94ecfcba';\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n//     const navigate = useNavigate();\n//     const location = useLocation();\n\n//     const [client, setClient] = useState([]);\n\n//     useEffect(() => {\n//         setClient(location.state);\n//     }, []);\n\n//     const update = (client) => {\n//         console.log(client);\n//         navigate('update', { state: client });\n//     };\n\n//     const remove = async (clientId) => {\n//         console.log(clientId);\n//         // const data = \n//         await fetch('http://localhost:3090/clients/remove', {\n//             method: 'DELETE',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ client: clientId })\n//         });\n//         navigate(-1);\n//     };\n\n//     return (\n//         <div>\n//             <h3>{client.firstName} {client.lastName}</h3>\n//             <p>id: {client.clientId}</p>\n//             <p>Address: {client.address}</p>\n//             <p>Date Of Birth: {client.dateOfBirth}</p>\n//             <p>Telephone: {client.telphone}</p>\n//             <p>Phone: {client.phone}</p>\n//             <p>Vaccins Date: {client.vaccinsDate}</p>\n//             <p>Vaccins Producer: {client.vaccineManufacturer}</p>\n//             <p>Positive Result: {client.positiveResult}</p>\n//             <p>Recovery Date: {client.recoveryDate}</p>\n\n//             <button onClick={() => { update(client) }}>update</button>\n//             <button onClick={() => { remove(client.id) }}>remove</button>\n//         </div>\n//     )\n_s(City, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Outlet","jsxDEV","_jsxDEV","City","_s","cities","setCities","appid","fetchWeatherData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER001/myRepo/WeatherWebsite/src/components/city.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport { Link, useNavigate, useLocation, Outlet } from 'react-router-dom';\r\n\r\nfunction City() {\r\n    \r\n    // import React, { useState, useEffect } from 'react';\r\n    // import CityCard from './CityCard';\r\n    \r\n      const [cities, setCities] = useState([]);\r\n    const appid = '8ee633956bad6ae1965b557a94ecfcba';\r\n      useEffect(() => {\r\n        \r\n        fetchWeatherData();\r\n      }, []);\r\n    \r\n      \r\n      return (\r\n        <div>\r\n          {/* {cities.map(city => (\r\n            // <CityCard key={city.id} {...city} />\r\n          ))} */}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n//     const navigate = useNavigate();\r\n//     const location = useLocation();\r\n\r\n//     const [client, setClient] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         setClient(location.state);\r\n//     }, []);\r\n\r\n//     const update = (client) => {\r\n//         console.log(client);\r\n//         navigate('update', { state: client });\r\n//     };\r\n\r\n//     const remove = async (clientId) => {\r\n//         console.log(clientId);\r\n//         // const data = \r\n//         await fetch('http://localhost:3090/clients/remove', {\r\n//             method: 'DELETE',\r\n//             headers: {\r\n//                 'Accept': 'application/json',\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ client: clientId })\r\n//         });\r\n//         navigate(-1);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h3>{client.firstName} {client.lastName}</h3>\r\n//             <p>id: {client.clientId}</p>\r\n//             <p>Address: {client.address}</p>\r\n//             <p>Date Of Birth: {client.dateOfBirth}</p>\r\n//             <p>Telephone: {client.telphone}</p>\r\n//             <p>Phone: {client.phone}</p>\r\n//             <p>Vaccins Date: {client.vaccinsDate}</p>\r\n//             <p>Vaccins Producer: {client.vaccineManufacturer}</p>\r\n//             <p>Positive Result: {client.positiveResult}</p>\r\n//             <p>Recovery Date: {client.recoveryDate}</p>\r\n\r\n//             <button onClick={() => { update(client) }}>update</button>\r\n//             <button onClick={() => { remove(client.id) }}>remove</button>\r\n//         </div>\r\n//     )\r\n\r\nexport default City;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ;EACA;;EAEE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,KAAK,GAAG,kCAAkC;EAC9CX,SAAS,CAAC,MAAM;IAEdY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEN,OAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIK,CAAC;AAEV;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAAR,EAAA,CAlESD,IAAI;AAAAU,EAAA,GAAJV,IAAI;AAoEb,eAAeA,IAAI;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}